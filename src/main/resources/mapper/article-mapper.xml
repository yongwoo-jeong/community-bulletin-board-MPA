<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="version.mpa.bbs.mapperInterface.ArticleMapper">
  <!-- 검색조건 재활용을 위한 sql 프라그먼트 -->
  <sql id="searchCondition">
    <trim prefix="where (" suffix=")" prefixOverrides="AND">
      <if test="searchCriteria != null and searchCriteria.keyword != null and !searchCriteria.keyword.equals('')" >
        AND title like CONCAT('%',#{searchCriteria.keyword},'%')
      </if>
      <!-- 보드 아이디 혹은 통합 검색을 위한 쿼리문 따로 만들어준다..      -->
      <if test="searchCriteria != null and searchCriteria.startDate != null and !searchCriteria.startDate.equals('')" >
        AND created &gt;= #{searchCriteria.startDate}
        OR modified &gt;= #{searchCriteria.startDate}
      </if>
      <if test="searchCriteria != null and searchCriteria.endDate != null and !searchCriteria.endDate.equals('')" >
        AND created &lt;= #{searchCriteria.endDate}
        OR modified &lt;= #{searchCriteria.endDate}
      </if>
    </trim>
  </sql>

  <!-- 검색조건, 현재 페이지에 해당하는 Limit Offset 받아 해당하는 게시글 List 반환  -->
  <select id="selectSearchArticles" resultType="version.mpa.bbs.vo.ArticleVO">
    SELECT *
    FROM ${board}
<!--        <include refid="searchCondition">-->
<!--          <property name="searchCriteria" value="searchCriteria"/>-->
<!--        </include>-->
    ORDER BY id DESC
    LIMIT #{dbLimitOffset}, 10
  </select>

  <!-- 검색조건, 현재 페이지에 해당하는 Limit Offset 받아 해당하는 게시글 수 반환 -->
  <select id="selectCountArticles" resultType="Integer">
    SELECT COUNT(*) FROM article A
    <include refid="searchCondition">
      <property name="searchCriteria" value="searchCriteria"/>
    </include>
  </select>

  <!-- 개별 게시글 보기 위해 해당하는 튜플 반환  -->
  <select id="selectArticleDetail" resultType="version.mpa.bbs.vo.ArticleVO">
    SELECT *
    FROM article
    WHERE article_id = #{articleId}
  </select>

  <!-- 새 게시글 등록을 위한 INSERT 쿼리  -->
  <insert id="insertArticle">
    INSERT INTO ${board}
                        (
                          title,
                          writer,
                          password,
                          content,
                          created,
                          category_id
                        )
                          VALUES
                        (
                          #{article.title},
                          #{article.writer},
                          #{article.password},
                          #{article.content},
                          NOW(),
                          #{article.categoryId}
                        )
    <!-- 파일 INSERT를 위해 해당 게시글 ID(FK)를 반환    -->
    <selectKey keyProperty="articleId" resultType="int" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>

  <!-- 조회수 증가를 위한 쿼리  -->
  <update id="updateViewCount">
    UPDATE article
    SET view = view+1
    WHERE article_id = #{articleId}
  </update>

  <!--  삭제 -->
  <delete id="deleteArticle">
    DELETE FROM article
    WHERE article_id= #{articleId}
  </delete>
  <!-- 업데이트  -->
  <update id="updateArticle">
    UPDATE article
    SET writer=#{writer}, title=#{title}, content=#{content}, updated=NOW()
    WHERE article_id = #{articleId}
  </update>

  <select id="selectCategories" resultType="version.mpa.bbs.vo.ArticleVO">
    SELECT *
    FROM category
  </select>
</mapper>